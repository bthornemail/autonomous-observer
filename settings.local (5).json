{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(cd:*)",
      "Bash(npm run build:*)",
      "Bash(node:*)",
      "Bash(python3:*)",
      "Bash(npm:*)",
      "Bash(mkdir:*)",
      "Bash(git log:*)",
      "Bash(git submodule add:*)",
      "Bash(git init:*)",
      "Bash(chmod:*)",
      "Bash(git commit:*)",
      "Bash(timeout:*)",
      "Bash(true)",
      "Bash(git checkout:*)",
      "Bash(ENABLE_WEB_SEARCH=true node web-enhanced-knowledge-archaeologist.js)",
      "Bash(ENABLE_WEB_SEARCH=true node super-enhanced-knowledge-archaeologist.js)",
      "Bash(ENABLE_WEB_SEARCH=true node ultimate-enhanced-knowledge-archaeologist.js)",
      "Bash(grep:*)",
      "Bash(git rev-list:*)",
      "mcp__ulp-dynamic__echo",
      "mcp__codacy__health",
      "mcp__redis__get",
      "mcp__sentry__whoami",
      "mcp__linear__list_teams",
      "mcp__socket__depscore",
      "Bash(git fsck:*)",
      "mcp__redis__set",
      "mcp__codacy__analyze",
      "mcp__linear__create_issue",
      "Bash(./recovery-script.sh)",
      "mcp__linear__update_issue",
      "Bash(git branch:*)",
      "mcp__linear__list_my_issues",
      "Bash(git submodule:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(git rm:*)",
      "Bash(rm:*)",
      "Bash(pkill:*)",
      "Bash(mv:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(git fetch:*)",
      "Bash(git clean:*)",
      "Bash(PORT=8081 node agent-hub.js)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Bash(PORT=8081 node mcp-integration/agent-hub.js)",
      "mcp__ulp-dynamic__map-repository-structure",
      "mcp__ulp-dynamic__build-knowledge-trie",
      "mcp__ulp-dynamic__query-knowledge-trie",
      "mcp__ulp-dynamic__analyze-commit-patterns",
      "mcp__ulp-dynamic__generate-unified-framework",
      "mcp__ulp-dynamic__analyze-singularity2d-history",
      "mcp__ulp-dynamic__extract-framework-patterns",
      "mcp__ulp-dynamic__integrate-autonomous-observer",
      "mcp__ulp-dynamic__register-agent",
      "mcp__ulp-dynamic__create-communication-channel",
      "Bash(./start-tetrahedron-simple.sh:*)",
      "Bash(/home/main/github/UniversalLifeProtocol/start-tetrahedron-simple.sh:*)",
      "mcp__ulp-dynamic__revolutionary-framework-status",
      "mcp__ulp-dynamic__agent-to-agent-message",
      "mcp__ulp-dynamic__simulate-consciousness",
      "Bash(test:*)"
    ],
    "deny": []
  },
  "enabledMcpjsonServers": [
    "redis",
    "codacy",
    "ulp-dynamic"
  ]
}